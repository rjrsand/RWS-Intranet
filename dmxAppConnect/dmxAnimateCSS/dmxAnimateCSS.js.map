{"version":3,"sources":["core/animate.js","components/animate.js","attributes/animateInview.js","attributes/animateOutview.js","attributes/animateEnter.js","attributes/animateLeave.js","attributes/animateMove.js"],"names":["dmx","animate","node","effect","duration","delay","cancelAnimate","clear","Promise","resolve","reject","className","complete","event","stopPropagation","removeEventListener","style","setProperty","classList","add","addEventListener","once","removeProperty","remove","effects","map","observer","IntersectionObserver","entries","forEach","entry","inview","outview","target","ratio","intersectionRatio","animateVisible","animating","then","catch","threshold","Component","initialData","visible","attributes","showeffect","type","String","default","hideeffect","showduration","Number","hideduration","showdelay","hidedelay","Boolean","methods","this","props","$node","init","performUpdate","updatedProps","has","set","Attribute","attr","value","modifiers","parseInt","argument","observe","random","Math","data","$index","preventDefault","pos","top","offsetTop","left","offsetLeft","width","offsetWidth","height","offsetHeight","requestAnimationFrame","offsetParent","appendChild","console","warn","parent","key","easing","find","repeater","updateHandler","getBoundingClientRect","updatedHandler"],"mappings":"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","file":"dmxAnimateCSS.js","sourcesContent":["dmx.animate = function (node, effect, duration, delay) {\r\n  if (node.cancelAnimate) node.cancelAnimate();\r\n\r\n  dmx.animate.clear(node);\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const className = `animate__${effect}`;\r\n    const complete = (event) => {\r\n      node.cancelAnimate = null;\r\n      event.stopPropagation();\r\n      dmx.animate.clear(node);\r\n      resolve();\r\n    }\r\n\r\n    node.cancelAnimate = () => {\r\n      node.removeEventListener('animationend', complete);\r\n      dmx.animate.clear(node);\r\n      reject();\r\n    };\r\n    \r\n    if (delay) node.style.setProperty('--animate-delay', delay + 'ms');\r\n    if (duration) node.style.setProperty('--animate-duration', duration + 'ms');\r\n\r\n    node.classList.add('animate__animated', className);\r\n\r\n    node.addEventListener('animationend', complete, { once: true });\r\n  });\r\n};\r\n\r\ndmx.animate.clear = function (node) {\r\n  node.style.removeProperty('--animation-delay');\r\n  node.style.removeProperty('--animation-duration');\r\n  node.classList.remove('animate__animated', ...dmx.animate.effects.map(effect => 'animate__' + effect));\r\n};\r\n\r\ndmx.animate.effects = [\r\n  // Attension seekers\r\n  'bounce', 'flash', 'pulse', 'rubberBand', 'shakeX', 'shakeY', 'headShake', 'swing', 'tada', 'wobble', 'jello', 'heartBeat',\r\n  // Back entrances\r\n  'backInDown', 'backInLeft', 'backInRight', 'backInUp',\r\n  // Back exits\r\n  'backOutDown', 'backOutLeft', 'backOutRight', 'backOutUp',\r\n  // Bouncing entrances\r\n  'bounceIn', 'bounceInDown', 'bounceInLeft', 'bounceInRight', 'bounceInUp',\r\n  // Bouncing exits\r\n  'bounceOut', 'bounceOutDown', 'bounceOutLeft', 'bounceOutRight', 'bounceOutUp',\r\n  // Fading entrances\r\n  'fadeIn', 'fadeInDown', 'fadeInDownBig', 'fadeInLeft', 'fadeInLeftBig', 'fadeInRight', 'fadeInRightBig',\r\n  'fadeInUp', 'fadeInUpBig', 'fadeInTopLeft', 'fadeInTopRight', 'fadeInBottomLeft', 'fadeInBottomRight',\r\n  // Fading exits\r\n  'fadeOut', 'fadeOutDown', 'fadeOutDownBig', 'fadeOutLeft', 'fadeOutLeftBig', 'fadeOutRight', 'fadeOutRightBig',\r\n  'fadeOutUp', 'fadeOutUpBig', 'fadeOutTopLeft', 'fadeOutTopRight', 'fadeOutBottomLeft', 'fadeOutBottomRight',\r\n  // Flippers\r\n  'flip', 'flipInX', 'flipInY', 'flipOutX', 'flipOutY',\r\n  // Lightspeed\r\n  'lightSpeedInRight', 'lightSpeedInLeft', 'lightSpeedOutRight', 'lightSpeedOutLeft',\r\n  // Rotating entrances\r\n  'rotateIn', 'rotateInDownLeft', 'rotateInDownRight', 'rotateInUpLeft', 'rotateInUpRight',\r\n  // Rotating exits\r\n  'rotateOut', 'rotateOutDownLeft', 'rotateOutDownRight', 'rotateOutUpLeft', 'rotateOutUpRight',\r\n  // Specials\r\n  'hinge', 'jackInTheBox', 'rollIn', 'rollOut',\r\n  // Zooming entrances\r\n  'zoomIn', 'zoomInDown', 'zoomInLeft', 'zoomInRight', 'zoomInUp',\r\n  // Zooming exits\r\n  'zoomOut', 'zoomOutDown', 'zoomOutLeft', 'zoomOutRight', 'zoomOutUp',\r\n  // Sliding entrances\r\n  'slideInDown', 'slideInLeft', 'slideInRight', 'slideInUp',\r\n  // Sliding exits\r\n  'slideOutDown', 'slideOutLeft', 'slideOutRight', 'slideOutUp'\r\n];\r\n\r\ndmx.animate.observer = new IntersectionObserver(entries => {\r\n  entries.forEach(entry => {\r\n    const { inview, outview } = entry.target;\r\n\r\n    entry.target.ratio = entry.intersectionRatio;\r\n\r\n    //if (!entry.isIntersecting) return;\r\n\r\n    if (!entry.target.animateVisible) {\r\n      entry.target.style.setProperty('visibility', 'hidden');\r\n    }\r\n\r\n    if (entry.intersectionRatio >= inview.ratio) {\r\n      if (!entry.target.animateVisible) {\r\n        entry.target.animating = true;\r\n        entry.target.animateVisible = true;\r\n        entry.target.style.removeProperty('visibility');\r\n\r\n        dmx.animate(entry.target, inview.effect, inview.duration, inview.delay).then(() => {\r\n          entry.target.animating = false;\r\n          entry.target.style.removeProperty('visibility');\r\n        }).catch(() => {});\r\n      }\r\n    } else {\r\n      if (outview && entry.target.animateVisible) {\r\n        entry.target.animating = true;\r\n        entry.target.animateVisible = false;\r\n        \r\n        dmx.animate(entry.target, outview.effect, outview.duration, outview.delay).then(() => {\r\n          entry.target.animating = false;\r\n          entry.target.style.setProperty('visibility', 'hidden');\r\n        }).catch(() => {});\r\n      }\r\n    }\r\n  });\r\n}, {\r\n  threshold: [0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1]\r\n});\r\n","dmx.Component('animate', {\r\n\r\n  initialData: {\r\n    animating: false,\r\n    visible: false,\r\n  },\r\n\r\n  attributes: {\r\n    showeffect: {\r\n      type: String,\r\n      default: null,\r\n    },\r\n\r\n    hideeffect: {\r\n      type: String,\r\n      default: null,\r\n    },\r\n\r\n    showduration: {\r\n      type: Number,\r\n      default: null,\r\n    },\r\n\r\n    hideduration: {\r\n      type: Number,\r\n      default: null,\r\n    },\r\n\r\n    showdelay: {\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n\r\n    hidedelay: {\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n\r\n    visible: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    animate (effect, duration) {\r\n      if (this.props.visible) {\r\n        dmx.animate(this.$node, effect, duration);\r\n      }\r\n    },\r\n  },\r\n\r\n  init (node) {\r\n    if (!this.props.visible) {\r\n      node.style.setProperty('visibility', 'hidden');\r\n    }\r\n  },\r\n\r\n  performUpdate (updatedProps) {\r\n    if (updatedProps.has('visible')) {\r\n      if (this.props.visible) {\r\n        if (this.props.showeffect) {\r\n          this.set('animating', true);\r\n\r\n          dmx.animate(this.$node, this.props.showeffect, this.props.showduration, this.props.showdelay).then(() => {\r\n            this.set('animating', false);\r\n          });\r\n        }\r\n\r\n        this.$node.style.removeProperty('visibility');\r\n      } else {\r\n        if (this.props.hideeffect) {\r\n          this.set('animating', true);\r\n\r\n          dmx.animate(this.$node, this.props.hideeffect, this.props.hideduration, this.props.hidedelay).then(() => {\r\n            this.set('animating', false);\r\n          });\r\n        }\r\n\r\n        this.$node.style.setProperty('visibility', 'hidden');\r\n      }\r\n\r\n      this.set('visible', this.props.visible);\r\n    }\r\n  },\r\n\r\n});\r\n","dmx.Attribute('animate-inview', 'mounted', function (node, attr) {\r\n  node.inview = {\r\n    effect: attr.value,\r\n    delay: attr.modifiers.delay,\r\n    duration: attr.modifiers.duration,\r\n    ratio: (parseInt(attr.argument, 10) || 100) / 100,\r\n  };\r\n\r\n  node.style.setProperty('visibility', 'hidden');\r\n\r\n  dmx.animate.observer.observe(node);\r\n});\r\n","dmx.Attribute('animate-outview', 'mounted', function (node, attr) {\r\n  node.outview = {\r\n    effect: attr.value,\r\n    delay: attr.modifiers.delay,\r\n    duration: attr.modifiers.duration,\r\n    ratio: (parseInt(attr.argument, 10) || 100) / 100,\r\n  };\r\n});","dmx.Attribute('animate-enter', 'mounted', function (node, attr) {\r\n  const { value, modifiers } = attr;\r\n  const { delay, duration, random } = modifiers;\r\n  dmx.animate(node, value, duration, (random ? Math.random() * 10 : this.data.$index) * delay);\r\n});","dmx.Attribute('animate-leave', 'mounted', function (node, attr) {\r\n  const { value, modifiers } = attr;\r\n  const { delay, duration, random } = modifiers;\r\n\r\n  // repeaters trigger a remove event on nodes that get removed\r\n  node.addEventListener('remove', event => {\r\n    event.preventDefault();\r\n\r\n    const pos = {\r\n      top: node.offsetTop,\r\n      left: node.offsetLeft,\r\n      width: node.offsetWidth,\r\n      height: node.offsetHeight,\r\n    };\r\n\r\n    requestAnimationFrame(() => {\r\n      node.style.setProperty('position', 'absolute');\r\n      node.style.setProperty('top', pos.top);\r\n      node.style.setProperty('left', pos.left);\r\n      node.style.setProperty('width', pos.width);\r\n      node.style.setProperty('height', pos.height);\r\n      node.offsetParent.appendChild(node);\r\n  \r\n      dmx.animate(node, value, duration, (random ? Math.random() * 10 : this.data.$index) * delay);\r\n    });\r\n  });\r\n});","dmx.Attribute('animate-move', 'mounted', function (node, attr) {\r\n  if (this.type !== 'repeat-item') {\r\n    console.warn('Attribute animate-move is only allowed on repeat items');\r\n    return;\r\n  }\r\n\r\n  if (!this.parent.props.key) {\r\n    console.warn('Attribute animate-move can only be used on keyed repeaters');\r\n    return;\r\n  }\r\n\r\n  const { delay, duration, random } = attr.modifiers;\r\n  const easing = ['linear', 'ease-in', 'ease-out', 'ease-in-out'].find(easing => !!attr.modifiers[easing]);\r\n  const repeater = this.parent;\r\n  const updateHandler = event => {\r\n    node.pos = node.getBoundingClientRect();\r\n  };\r\n  const updatedHandler = event => {\r\n    if (node.pos) {\r\n      node.style.removeProperty('transform');\r\n      node.style.removeProperty('transition');\r\n\r\n      requestAnimationFrame(() => {\r\n        const { left, top } = node.getBoundingClientRect();\r\n\r\n        node.style.setProperty('transform', `translate(${node.pos.left - left}px, ${node.pos.top - top}px)`);\r\n\r\n        requestAnimationFrame(() => {\r\n          node.style.setProperty('transition', `transform ${duration || 800}ms ${easing || 'ease'} ${delay ? ((random ? Math.random() * 10 : this.data.$index) * delay) : 0}ms`);\r\n          node.style.removeProperty('transform');\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  repeater.addEventListener('update', updateHandler);\r\n  repeater.addEventListener('updated', updatedHandler);\r\n\r\n  this.addEventListener('destroy', event => {\r\n    repeater.removeEventListener('update', updateHandler);\r\n    repeater.removeEventListener('updated', updatedHandler);\r\n  })\r\n});"]}